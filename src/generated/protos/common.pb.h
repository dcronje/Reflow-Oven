/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.9.1 */

#ifndef PB_REFLOW_PROTOS_COMMON_PB_H_INCLUDED
#define PB_REFLOW_PROTOS_COMMON_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
/* Result status for command responses */
typedef enum _reflow_ResultStatus {
    reflow_ResultStatus_SUCCESS = 0,
    reflow_ResultStatus_ERROR = 1,
    reflow_ResultStatus_INVALID_COMMAND = 2,
    reflow_ResultStatus_NOT_IMPLEMENTED = 3,
    reflow_ResultStatus_TIMEOUT = 4
} reflow_ResultStatus;

typedef enum _reflow_BaseMessage_MessageType {
    reflow_BaseMessage_MessageType_COMMAND = 0,
    reflow_BaseMessage_MessageType_EVENT = 1,
    reflow_BaseMessage_MessageType_QUERY = 2,
    reflow_BaseMessage_MessageType_RESPONSE = 3
} reflow_BaseMessage_MessageType;

/* Struct definitions */
/* Base message structure all messages derive from */
typedef struct _reflow_BaseMessage {
    reflow_BaseMessage_MessageType type;
    uint32_t sequence_id; /* For tracking requests/responses */
    uint64_t timestamp; /* When the message was created */
    uint32_t priority; /* Message priority (0=highest) */
} reflow_BaseMessage;

/* Generic response for commands */
typedef struct _reflow_CommandResponse {
    reflow_ResultStatus status;
    pb_callback_t message; /* Optional detail message */
    uint32_t original_sequence_id; /* ID of the original command */
} reflow_CommandResponse;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _reflow_ResultStatus_MIN reflow_ResultStatus_SUCCESS
#define _reflow_ResultStatus_MAX reflow_ResultStatus_TIMEOUT
#define _reflow_ResultStatus_ARRAYSIZE ((reflow_ResultStatus)(reflow_ResultStatus_TIMEOUT+1))

#define _reflow_BaseMessage_MessageType_MIN reflow_BaseMessage_MessageType_COMMAND
#define _reflow_BaseMessage_MessageType_MAX reflow_BaseMessage_MessageType_RESPONSE
#define _reflow_BaseMessage_MessageType_ARRAYSIZE ((reflow_BaseMessage_MessageType)(reflow_BaseMessage_MessageType_RESPONSE+1))

#define reflow_BaseMessage_type_ENUMTYPE reflow_BaseMessage_MessageType

#define reflow_CommandResponse_status_ENUMTYPE reflow_ResultStatus


/* Initializer values for message structs */
#define reflow_BaseMessage_init_default          {_reflow_BaseMessage_MessageType_MIN, 0, 0, 0}
#define reflow_CommandResponse_init_default      {_reflow_ResultStatus_MIN, {{NULL}, NULL}, 0}
#define reflow_BaseMessage_init_zero             {_reflow_BaseMessage_MessageType_MIN, 0, 0, 0}
#define reflow_CommandResponse_init_zero         {_reflow_ResultStatus_MIN, {{NULL}, NULL}, 0}

/* Field tags (for use in manual encoding/decoding) */
#define reflow_BaseMessage_type_tag              1
#define reflow_BaseMessage_sequence_id_tag       2
#define reflow_BaseMessage_timestamp_tag         3
#define reflow_BaseMessage_priority_tag          4
#define reflow_CommandResponse_status_tag        1
#define reflow_CommandResponse_message_tag       2
#define reflow_CommandResponse_original_sequence_id_tag 3

/* Struct field encoding specification for nanopb */
#define reflow_BaseMessage_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    type,              1) \
X(a, STATIC,   SINGULAR, UINT32,   sequence_id,       2) \
X(a, STATIC,   SINGULAR, UINT64,   timestamp,         3) \
X(a, STATIC,   SINGULAR, UINT32,   priority,          4)
#define reflow_BaseMessage_CALLBACK NULL
#define reflow_BaseMessage_DEFAULT NULL

#define reflow_CommandResponse_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    status,            1) \
X(a, CALLBACK, SINGULAR, STRING,   message,           2) \
X(a, STATIC,   SINGULAR, UINT32,   original_sequence_id,   3)
#define reflow_CommandResponse_CALLBACK pb_default_field_callback
#define reflow_CommandResponse_DEFAULT NULL

extern const pb_msgdesc_t reflow_BaseMessage_msg;
extern const pb_msgdesc_t reflow_CommandResponse_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define reflow_BaseMessage_fields &reflow_BaseMessage_msg
#define reflow_CommandResponse_fields &reflow_CommandResponse_msg

/* Maximum encoded size of messages (where known) */
/* reflow_CommandResponse_size depends on runtime parameters */
#define REFLOW_PROTOS_COMMON_PB_H_MAX_SIZE       reflow_BaseMessage_size
#define reflow_BaseMessage_size                  25

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
